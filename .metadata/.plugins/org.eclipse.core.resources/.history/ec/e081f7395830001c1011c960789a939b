package com.pbrm.backend.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.pbrm.backend.model.User;

/**
 * Patrick Rodriguez
 * */
@Controller
@RequestMapping("/user")
public class UserController {

	private static final String MODEL_USER_VIEW="test2";
	
	@GetMapping("/test2")
	public ModelAndView users(Model model) {
		ModelAndView modelandview = new ModelAndView(MODEL_USER_VIEW);
		modelandview.addObject("users", getUsers());
		return modelandview;
	}

	
	
	/*
	 * GET list Value
	 * http://localhost:8080/user/list?username=User
	 */
	
	@GetMapping("/list")
	public ModelAndView users(@RequestParam("username") String username) {
		ModelAndView modelandview = new ModelAndView(MODEL_USER_VIEW);
		List<User> userfilter = getUsers()
								.stream()
								.filter(data -> data.getUser().equals(username))
								.collect(Collectors.toList());
		modelandview.addObject("users", userfilter);
				
		return modelandview;
	}
	
	/*
	 * GET list Value of password
	 * http://localhost:8080/user/listbypass/password
	 */

	@GetMapping("/listbypass/{password}")
	public ModelAndView usersbypass(@PathVariable("password") String username) {
		ModelAndView modelandview = new ModelAndView(MODEL_USER_VIEW);
		List<User> userfilter = getUsers()
								.stream()
								.filter(data -> data.getPassword().equals(username))
								.collect(Collectors.toList());
		modelandview.addObject("users", userfilter);
				
		return modelandview;
	}
	
	
	@GetMapping("/newuser")
	public String formnewuser(Model model) {
		model.addAttribute("user", new User());
		return MODEL_USER_VIEW;
	}

	@PostMapping("/adduser")
	public String adduser(@ModelAttribute("user") User user) {
		ModelAndView modelandview = new ModelAndView(MODEL_USER_VIEW);
		modelandview.addObject("personResult", user);
		return MODEL_USER_VIEW;
	}
	
	
	private List<User> getUsers() {
		List<User> users = new ArrayList<User>();
		users.add(new User("User1", "12345"));
		users.add(new User("User2", "12345"));
		users.add(new User("User3", "12345"));
		return users;
	}

}
